# You may add here your
# server {
#	...
# }
# statements for each of your virtual hosts to this file

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

server {
	listen 80;

	server_name jinglei.me www.jinglei.me;

	client_max_body_size 10G;

	location / {
      proxy_pass http://localhost:2368;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_buffering off;
  }
}

server {
	listen 80 default_server;
	listen [::]:80 default_server ipv6only=on;

	root /usr/share/nginx/html/mr-slides;
	index index.html index.htm;

	# Make site accessible from http://localhost/
	server_name localhost;

	location /1 {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ /index1.html;
		# Uncomment to enable naxsi on this location
		# include /etc/nginx/naxsi.rules
	}

	location /2 {
                try_files $uri $uri/ /index2.html;
        }

	location /3 {
                try_files $uri $uri/ /index3.html;
        }

	location /4 {
                try_files $uri $uri/ /index4.html;
        }

	location /5 {
                try_files $uri $uri/ /index5.html;
        }

	location /6 {
                try_files $uri $uri/ /index6.html;
        }

	location /7 {
                try_files $uri $uri/ /index7.html;
        }

	location /8 {
                try_files $uri $uri/ /index8.html;
        }

	location /9 {
                try_files $uri $uri/ /index9.html;
        }

	location /10 {
                try_files $uri $uri/ /index10.html;
        }

	location /11 {
                try_files $uri $uri/ /index11.html;
        }

	location /12 {
                try_files $uri $uri/ /index12.html;
        }

	location /20160326 {
                try_files $uri $uri/ /20160326.html;
        }

	location /13 {
                try_files $uri $uri/ /index13.html;
        }

	location /14 {
                try_files $uri $uri/ /index14.html;
        }

	location /15 {
                try_files $uri $uri/ /index15.html;
        }

	location /16 {
                try_files $uri $uri/ /index16.html;
        }

	location /20160731 {
                try_files $uri $uri/ /20160731.html;
        }

	location /20160828 {
                try_files $uri $uri/ /20160828.html;
        }

	location /tr1 {
                try_files $uri $uri/ /idxtr1.html;
        }

	location /rdemo {
		try_files $uri $uri/ /demo.html;
	}

	# Only for nginx-naxsi used with nginx-naxsi-ui : process denied requests
	#location /RequestDenied {
	#	proxy_pass http://127.0.0.1:8080;
	#}

	#error_page 404 /404.html;

	# redirect server error pages to the static page /50x.html
	#
	#error_page 500 502 503 504 /50x.html;
	#location = /50x.html {
	#	root /usr/share/nginx/html;
	#}

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	#location ~ \.php$ {
	#	fastcgi_split_path_info ^(.+\.php)(/.+)$;
	#	# NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
	#
	#	# With php5-cgi alone:
	#	fastcgi_pass 127.0.0.1:9000;
	#	# With php5-fpm:
	#	fastcgi_pass unix:/var/run/php5-fpm.sock;
	#	fastcgi_index index.php;
	#	include fastcgi_params;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
#	listen 8000;
#	listen somename:8080;
#	server_name somename alias another.alias;
#	root html;
#	index index.html index.htm;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}


# HTTPS server
#
#server {
#	listen 443;
#	server_name localhost;
#
#	root html;
#	index index.html index.htm;
#
#	ssl on;
#	ssl_certificate cert.pem;
#	ssl_certificate_key cert.key;
#
#	ssl_session_timeout 5m;
#
#	ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
#	ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
#	ssl_prefer_server_ciphers on;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
